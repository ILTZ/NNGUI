# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'f:\Dev\neyroNet\code\NNCopyVsCode\NNGUI\uixml\helpLearn.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import os
dirname = os.path.dirname(__file__)
filenameIcon = os.path.join(dirname, 'resources/icon.png')

from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_helpWindow(object):
    def setupUi(self, helpWindow):
        helpWindow.setObjectName("helpWindow")
        helpWindow.resize(662, 521)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(filenameIcon), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        helpWindow.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(helpWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.textGroupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.textGroupBox.setGeometry(QtCore.QRect(10, 10, 641, 541))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.textGroupBox.setFont(font)
        self.textGroupBox.setObjectName("textGroupBox")
        self.label = QtWidgets.QLabel(self.textGroupBox)
        self.label.setGeometry(QtCore.QRect(20, 30, 611, 501))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label.setFont(font)
        self.label.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.label.setObjectName("label")
        helpWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(helpWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 662, 21))
        self.menubar.setObjectName("menubar")
        helpWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(helpWindow)
        self.statusbar.setObjectName("statusbar")
        helpWindow.setStatusBar(self.statusbar)

        self.retranslateUi(helpWindow)
        QtCore.QMetaObject.connectSlotsByName(helpWindow)

    def retranslateUi(self, helpWindow):
        _translate = QtCore.QCoreApplication.translate
        helpWindow.setWindowTitle(_translate("helpWindow", "Помощь"))
        self.textGroupBox.setTitle(_translate("helpWindow", "Обучение"))
        self.label.setText(_translate("helpWindow", "В разделе \"Обучение\" проходит процесс выбора параметров, на которые будет\n"
"настраиваться нейросеть.\n"
"Данные для нейросети (выборка) могут быть как заданы в ручную, так и \n"
"выбраны из файла (при помощи кнопки в \"Меню\" в левом верхнем углу).\n"
"При задании данных в ручную необходимо ввести значения в слоты \"Входные\n"
"значения\", а также целевое для этих данных значение в слот \"Целевое значение\".\n"
"Загрузить выборку из файла можно в случае, если файл имеет расширение\n"
"\".txt\" и \".xlsx\". Для корректного чтение необходимо, чтобы:\n"
"1) Если файл имеет расширение \".txt\" - значения должны быть введены в \n"
"формате \"X.X,X.X,X.X,X.X_/t_Y.Y\", где X.X - одно из входных значений, Y.Y - \n"
"целевое значение, а _/t_ - табуляция (кнопка \"Tab\");\n"
"2) Если файл имеет расширение \".xlsx\" - одно значение должно занимать одну\n"
"ячейку (число должно быть разделено точкой), а последнее значение в строке\n"
"должно быть целевым для данной строки.\n"
"Кнопки \"Старт\" и \"Стоп\" выполняют одноименные действия в процессе\n"
"тренировки.\n"
"\"Оценка точности\" отвечает за то, на сколько корректно настроилась нейросеть\n"
"на представленную выборку, и работает только в случае загрузки выборки из \n"
"файла. Перед стартом тренировки выберите нужную погрешность, и ,после\n"
"завершения тренировки, в строке \"Значение\" появится значение от 0.0 до 1.0,\n"
"где 0.0 - оценка точности неудовлетворительна, а 1.0 - сеть настроена точно\n"
"(относительно заданной погрешности)."))
